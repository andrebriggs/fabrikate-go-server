trigger:
  - master
pool:
  vmImage: Ubuntu-16.04
steps:
  - bash: |
      git clone https://github.com/samiyaakhtar/container-journey.git
      cd container-journey/pipeline-scripts

      sudo /usr/bin/easy_install virtualenv
      pip install virtualenv 
      pip install --upgrade pip
      python -m virtualenv venv
      source venv/bin/activate
      python -m pip install --upgrade pip
      pip install -r requirements.txt

      commitId=$(Build.SourceVersion)
      commitId=$(echo "${commitId:0:7}")
      echo "python update_pipeline.py $(ACCOUNT_NAME) $(ACCOUNT_KEY) $(TABLE_NAME) $(PARTITION_KEY) hldCommitId $commitId p3 $(Build.BuildId)"
      python update_pipeline.py $(ACCOUNT_NAME) $(ACCOUNT_KEY) $(TABLE_NAME) $(PARTITION_KEY) hldCommitId $commitId p3 $(Build.BuildId)
    displayName: Update manifest pipeline details in CJ db
  - checkout: self
    persistCredentials: true
    clean: true
  - bash: |
      curl $BEDROCK_BUILD_SCRIPT > build.sh
      chmod +x ./build.sh
    displayName: Download Bedrock orchestration script
    env:
      BEDROCK_BUILD_SCRIPT: >-
        https://raw.githubusercontent.com/Microsoft/bedrock/master/gitops/azure-devops/build.sh
  - task: ShellScript@2
    displayName: Validate fabrikate definitions
    inputs:
      scriptPath: build.sh
    condition: 'eq(variables[''Build.Reason''], ''PullRequest'')'
    env:
      VERIFY_ONLY: 1
  - task: ShellScript@2
    displayName: Transform fabrikate definitions and publish to YAML manifests to repo
    inputs:
      scriptPath: build.sh
    condition: 'ne(variables[''Build.Reason''], ''PullRequest'')'
    env:
      ACCESS_TOKEN_SECRET: $(ACCESS_TOKEN)
      COMMIT_MESSAGE: $(Build.SourceVersionMessage)
      REPO: $(MANIFEST_REPO)
      FAB_ENVS: 'DEV,QA,STAGING WEST,STAGING EAST,STAGING CENTRAL,PROD WEST,PROD EAST,PROD CENTRAL'
